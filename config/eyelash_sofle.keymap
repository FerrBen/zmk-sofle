#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        accent_ae: accent_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "ACCENT_AE";
        };

        pause_yt: pause_yt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_1) &kp LA(K) &kp SPACE &kp LA(TAB)>;
            label = "PAUSE_YT";
        };

        accent_oe: accent_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "ACCENT_OE";
        };

        accent_ue: accent_ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "ACCENT_UE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1    &kp N2            &kp N3            &kp N4  &kp N5       &kp UP_ARROW     &kp N6         &kp N7     &kp N8     &kp N9   &kp N0     &kp DELETE
&kp TAB         &kp Q     &kp W             &kp E             &kp R   &kp T        &kp DOWN_ARROW   &kp Y          &kp U      &kp I      &kp O    &kp P      &kp BACKSLASH
&kp LEFT_SHIFT  &kp A     &kp S             &kp D             &kp F   &kp G        &kp LEFT_ARROW   &kp H          &kp J      &kp K      &kp L    &kp SEMI   &kp SINGLE_QUOTE
&kp LEFT_ALT    &kp Z     &kp X             &kp C             &kp V   &kp B        &kp RIGHT_ARROW  &kp N          &kp M      &kp COMMA  &kp DOT  &kp FSLH   &kp RIGHT_CONTROL
&kp C_MUTE      &kp CLCK  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &mo 1   &kp ENTER    &kp ENTER        &kp BACKSPACE  &kp SPACE  &mo 2      &none    &pause_yt
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        layer_1 {
            bindings = <
&none      &kp EXCL  &kp AT            &kp HASH           &kp DOLLAR      &kp PERCENT             &kp C          &kp CARET              &kp AMPERSAND    &kp ASTERISK    &none              &none          &none
&kp LC(F)  &none     &kp LEFT_BRACKET  &kp SINGLE_QUOTE   &kp LEFT_BRACE  &kp LEFT_PARENTHESIS    &kp AMPERSAND  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp UP_ARROW    &kp RIGHT_BRACKET  &accent_ae     &kp PIPE
&trans     &none     &none             &kp DOUBLE_QUOTES  &kp EQUAL       &kp PLUS                &kp P          &kp MINUS              &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT          &accent_oe     &trans
&pause_yt  &none     &none             &none              &none           &none                   &kp N          &kp UNDERSCORE         &kp GRAVE        &kp TILDE       &kp QUESTION       &accent_ue     &kp DOUBLE_QUOTES
&none      &none     &none             &mo 3              &none           &none                   &kp LC(F)      &trans                 &kp LG(C)        &kp LG(V)       &kp LG(MINUS)      &kp LG(EQUAL)
            >;
        };

        layer_2 {
            bindings = <
&kp F1  &kp F2      &kp F3  &kp F4  &kp F5  &kp F6    &none  &kp F7          &kp F8          &kp F9        &kp F10          &kp F11  &kp F12
&none   &none       &none   &none   &none   &none     &none  &none           &accent_ue      &none         &accent_oe       &none    &none
&none   &accent_ae  &none   &none   &none   &none     &none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none    &none
&none   &none       &none   &none   &none   &none     &none  &none           &none           &none         &none            &none    &none
&none   &none       &none   &none   &mo 3   &none     &none  &none           &none           &none         &none            &none
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };

        layer_3 {
            bindings = <
&none  &none  &none  &none  &none  &none    &rgb_ug RGB_HUI  &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR_ALL
&none  &none  &none  &none  &none  &none    &rgb_ug RGB_HUD  &none            &none            &none            &none         &none         &none
&none  &none  &none  &none  &none  &none    &rgb_ug RGB_EFR  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &none         &none         &none
&none  &none  &none  &none  &none  &none    &rgb_ug RGB_EFF  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &none         &none         &none
&none  &none  &none  &none  &none  &none    &rgb_ug RGB_TOG  &none            &none            &none            &none         &none
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
