#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        accent_ae: accent_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "ACCENT_AE";
        };

        pause_yt: pause_yt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_1) &kp LA(K) &kp SPACE &kp LA(TAB)>;
            label = "PAUSE_YT";
        };

        accent_oe: accent_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "ACCENT_OE";
        };

        accent_ue: accent_ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "ACCENT_UE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&pause_yt     &kp EXCL  &kp QMARK         &kp LEFT_BRACE    &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET    &kp UP_ARROW     &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE    &kp TILDE  &kp GRAVE  &kp DEL
&kp TAB       &kp Q     &kp W             &kp E             &kp R                 &kp T               &kp DOWN_ARROW   &kp Y              &kp U                  &kp I              &kp O      &kp P      &kp BACKSLASH
&kp ESCAPE    &kp A     &kp S             &kp D             &kp F                 &kp G               &kp LEFT_ARROW   &kp H              &kp J                  &kp K              &kp L      &kp SEMI   &kp SINGLE_QUOTE
&kp LEFT_ALT  &kp Z     &kp X             &kp C             &kp V                 &kp B               &kp RIGHT_ARROW  &kp N              &kp M                  &kp COMMA          &kp DOT    &kp FSLH   &kp TILDE
&kp C_MUTE    &kp CLCK  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &lt 1 ENTER           &kp LEFT_SHIFT      &sl 2            &kp BACKSPACE      &kp SPACE              &kp RIGHT_CONTROL  &kp MINUS  &kp EQUAL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        layer_1 {
            bindings = <
&none   &kp EXCL      &kp AT  &kp HASH  &kp DOLLAR  &kp PERCENT    &kp C_VOLUME_UP    &kp CARET       &kp AMPERSAND   &kp ASTERISK  &none            &none   &none
&none   &kp N1        &kp N2  &kp N3    &kp N4      &kp N5         &kp C_VOLUME_DOWN  &kp N6          &kp N7          &kp N8        &kp N9           &kp N0  &kp PIPE
&trans  &kp LEFT_ALT  &none   &none     &kp LC(F)   &none          &kp C_PREVIOUS     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none   &kp DOUBLE_QUOTES
&trans  &none         &none   &none     &none       &none          &kp C_NEXT         &none           &none           &none         &none            &none   &trans
&none   &none         &trans  &trans    &trans      &trans         &kp C_PLAY_PAUSE   &trans          &trans          &trans        &none            &none
            >;
        };

        layer_2 {
            bindings = <
&kp F1           &kp F2            &kp F3            &kp F4            &kp F5            &kp F6          &none  &kp F7            &kp F8           &kp F9           &kp F10          &kp F11          &kp F12
&trans           &kp LA(NUMBER_1)  &kp LA(NUMBER_2)  &kp LA(NUMBER_3)  &kp LA(NUMBER_4)  &kp LA(N5)      &none  &kp LA(NUMBER_6)  &kp LA(N7)       &kp LA(N8)       &kp LA(N9)       &kp LA(N0)       &none
&trans           &none             &none             &none             &none             &none           &none  &rgb_ug RGB_HUI   &rgb_ug RGB_SAI  &rgb_ug RGB_SPI  &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &none
&bt BT_CLR       &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4    &none  &rgb_ug RGB_HUD   &rgb_ug RGB_SAD  &rgb_ug RGB_SPD  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &none
&rgb_ug RGB_TOG  &sys_reset        &bootloader       &trans            &trans            &trans          &none  &trans            &trans           &trans           &bootloader      &sys_reset
            >;

            sensor-bindings = <&inc_dec_kp C_BRIGHTNESS_INC C_BRIGHTNESS_DEC>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
