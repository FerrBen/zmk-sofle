#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        accent_ae: accent_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp A>;
            label = "ACCENT_AE";
        };

        pause_yt: pause_yt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(NUMBER_1) &kp LA(K) &kp SPACE &kp LA(TAB)>;
            label = "PAUSE_YT";
        };

        accent_oe: accent_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp O>;
            label = "ACCENT_OE";
        };

        accent_ue: accent_ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(U) &kp U>;
            label = "ACCENT_UE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1    &kp N2            &kp N3            &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7         &kp N8     &kp N9   &kp N0    &kp DELETE
&kp TAB         &kp Q     &kp W             &kp E             &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U          &kp I      &kp O    &kp P     &kp BACKSLASH
&kp LEFT_ALT    &kp A     &kp S             &kp D             &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J          &kp K      &kp L    &kp SEMI  &kp APOS
&kp LEFT_SHIFT  &kp Z     &kp X             &kp C             &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
&kp C_MUTE      &kp CLCK  &kp LEFT_CONTROL  &kp LEFT_COMMAND  &mo 1   &kp ENTER    &kp ENTER        &kp SPACE  &kp BACKSPACE  &mo 2      &none    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Base";
        };

        layer_1 {
            bindings = <
&none  &none            &none        &none     &none       &none          &none  &none           &none          &none         &none                 &none                  &none
&none  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT    &none  &kp CARET       &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none
&none  &none            &none        &none     &none       &none          &none  &kp MINUS       &kp EQUAL      &kp GRAVE     &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PIPE
&none  &none            &none        &none     &none       &none          &none  &kp UNDERSCORE  &kp PLUS       &kp TILDE     &kp LEFT_BRACE        &kp RIGHT_BRACE        &none
&none  &none            &none        &none     &none       &none          &none  &none           &none          &none         &none                 &none
            >;
        };

        layer_2 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
