#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        accent_ae: accent_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(U)>, <&macro_press>, <&kp A>;

            label = "ACCENT_AE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp N1     &kp N2    &kp N3  &kp N4     &kp N5       &kp UP_ARROW    &kp N6     &kp N7     &kp N8     &kp N9   &kp N0      &kp BSPC
&kp TAB     &kp Q      &kp W     &kp E   &kp R      &kp T        &kp DOWN_ARROW  &kp Y      &kp U      &kp I      &kp O    &kp P       &kp BSLH
&kp LGUI    &kp A      &kp S     &kp D   &kp F      &kp G        &kp LEFT_ARROW  &kp H      &kp J      &kp K      &kp L    &kp SEMI    &kp SQT
&mo 2       &kp Z      &kp X     &kp C   &kp V      &kp B        &kp RIGHT       &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH    &kp ENTER
&kp C_MUTE  &kp LCTRL  &kp LALT  &mo 1   &kp LSHFT  &kp SPACE    &kp ENTER       &kp SPACE  &kp ENTER  &mo 1      &mo 2    &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer_1 {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp C_BRI_INC         &kp F7  &kp F8          &kp F9    &kp F10          &kp F11    &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &kp C_BRIGHTNESS_DEC  &trans  &kp LEFT_BRACE  &kp UP    &kp RIGHT_BRACE  &kp MINUS  &kp EQUAL
&trans  &trans  &trans  &trans  &trans  &trans    &kp LG(MINUS)         &trans  &kp LEFT        &kp DOWN  &kp RIGHT        &kp LBKT   &kp RBKT
&trans  &trans  &trans  &trans  &trans  &trans    &kp LG(EQUAL)         &trans  &accent_ae      &trans    &trans           &trans     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans                &trans  &trans          &trans    &trans           &trans
            >;
        };

        layer_2 {
            bindings = <
&kp TILDE       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3   &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR_ALL  &trans        &trans        &trans        &trans         &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans         &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&bl BL_TOG      &bl BL_DEC    &bl BL_INC    &bl BL_CYCLE  &bl BL_SET 10  &trans          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans        &trans        &trans        &trans         &trans          &trans  &trans  &trans  &trans  &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };
    };
};
