#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        accent_ae: accent_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_press>;

            label = "ACCENT_AE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC         &kp N1     &kp N2    &kp N3  &kp N4            &kp N5           &kp UP_ARROW     &kp N6     &kp N7     &kp N8     &kp N9   &kp N0         &kp MINUS
&kp GRAVE       &kp Q      &kp W     &kp E   &kp R             &kp T            &kp DOWN_ARROW   &kp Y      &kp U      &kp I      &kp O    &kp P          &kp PLUS
&kp TAB         &kp A      &kp S     &kp D   &kp F             &kp G            &kp LEFT_ARROW   &kp H      &kp J      &kp K      &kp L    &kp SEMI       &kp APOS
&kp LEFT_SHIFT  &kp Z      &kp X     &kp C   &kp V             &kp B            &kp RIGHT_ARROW  &kp N      &kp M      &kp COMMA  &kp DOT  &kp FSLH       &kp RIGHT_SHIFT
&kp C_MUTE      &kp LCTRL  &kp LALT  &mo 1   &kp LEFT_COMMAND  &kp BACKSPACE    &kp ENTER        &kp SPACE  &kp ENTER  &mo 1      &mo 2    &kp BACKSLASH
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&trans  &trans     &trans  &trans  &trans     &trans     &kp C_BRIGHTNESS_INC  &trans            &kp AMPERSAND      &kp STAR        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp BACKSPACE
&trans  &trans     &trans  &trans  &trans     &trans     &kp C_BRIGHTNESS_DEC  &trans            &trans             &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp MINUS              &kp PLUS
&trans  &kp LG(X)  &trans  &trans  &kp LG(A)  &trans     &kp LG(MINUS)         &kp LEFT_ARROW    &kp DOWN_ARROW     &kp UP_ARROW    &kp RIGHT_ARROW       &trans                 &trans
&trans  &trans     &trans  &trans  &trans     &trans     &kp LG(EQUAL)         &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LESS_THAN   &kp GREATER_THAN      &kp BACKSLASH          &trans
&trans  &trans     &trans  &trans  &trans     &kp DEL    &trans                &kp LG(C)         &kp LG(V)          &kp TILDE       &trans                &trans
            >;
        };

        layer_2 {
            bindings = <
&kp F1           &kp F2          &kp F3           &kp F4           &kp F5           &kp F6             &trans  &kp F7           &kp F8           &kp F9           &kp F10          &kp F11                            &kp F12
&rgb_ug RGB_OFF  &rgb_ug RGB_ON  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD    &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_COLOR_HSB(278,100,50)  &rgb_ug RGB_COLOR_HSB(0,0,100)
&bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &trans             &trans  &trans           &trans           &trans           &trans           &trans                             &trans
&bt BT_CLR       &bt BT_CLR_ALL  &out OUT_BLE     &out OUT_USB     &trans           &trans             &trans  &trans           &trans           &trans           &trans           &trans                             &trans
&trans           &sys_reset      &bootloader      &trans           &trans           &trans             &trans  &trans           &trans           &trans           &trans           &trans
            >;
        };
    };
};
